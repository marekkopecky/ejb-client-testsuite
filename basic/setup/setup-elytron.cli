# prepare the server to use Elytron as security provider

if (outcome == failed) of /subsystem=elytron/sasl-authentication-factory=application-sasl-authentication-nolocal:read-resource
    /subsystem=elytron/sasl-authentication-factory=application-sasl-authentication-nolocal:add(mechanism-configurations=[{mechanism-name=DIGEST-MD5,mechanism-realm-configurations=[{realm-name=ApplicationRealm}]}], security-domain=ApplicationDomain, sasl-server-factory=configured)
end-if

if (outcome == failed) of /subsystem=elytron/http-authentication-factory=application-http-authentication:read-resource
    /subsystem=elytron/http-authentication-factory=application-http-authentication:add(http-server-mechanism-factory=global, mechanism-configurations=[{mechanism-name="BASIC",mechanism-realm-configurations=[{realm-name="Application Realm"}]},{mechanism-name="FORM"}],security-domain=ApplicationDomain)
end-if

if (result == 7.1.0.GA) of /:read-attribute(name=product-version)
    set path=http-authentication-factory=application-http-authentication
else
    set path=security-domain=ApplicationDomain
end-if

if (outcome == failed) of /subsystem=undertow/application-security-domain=other:read-resource
   /subsystem=undertow/application-security-domain=other:add($path)
end-if

if (outcome == failed) of /subsystem=ejb3/application-security-domain=other2:read-resource
   /subsystem=ejb3/application-security-domain=other2:add(security-domain=ApplicationDomain)
end-if

/subsystem=ejb3/:write-attribute(name=default-security-domain, value=other2)
/subsystem=batch-jberet:write-attribute(name=security-domain, value=ApplicationDomain)

/subsystem=remoting/http-connector=http-remoting-connector:write-attribute(name=sasl-authentication-factory, value=application-sasl-authentication-nolocal)

if (outcome == failed) of /core-service=management/access=identity:read-resource
   /core-service=management/access=identity:add(security-domain=ManagementDomain)
end-if

/core-service=management/management-interface=http-interface:write-attribute(name=http-upgrade,value={enabled=true, sasl-authentication-factory=management-sasl-authentication})
/core-service=management/management-interface=http-interface:write-attribute(name=http-authentication-factory,value=management-http-authentication)

if (outcome == success) of /core-service=management/security-realm=ManagementRealm:read-resource
   /core-service=management/security-realm=ManagementRealm:remove
end-if

if (outcome == success) of /core-service=management/security-realm=ApplicationRealm/authentication=local:read-resource
   /core-service=management/security-realm=ApplicationRealm/authentication=local:remove
end-if

if (outcome == success) of /core-service=management/security-realm=ApplicationRealm/authentication=properties:read-resource
   /core-service=management/security-realm=ApplicationRealm/authentication=properties:remove
end-if

if (outcome == success) of /core-service=management/security-realm=ApplicationRealm/authorization=properties:read-resource
   /core-service=management/security-realm=ApplicationRealm/authorization=properties:remove
end-if

/subsystem=elytron/security-domain=ApplicationDomain:write-attribute(name=realms,value=[{"realm"=>"ApplicationRealm", "role-decoder"=>"groups-to-roles"}])

/subsystem=messaging-activemq/server=default:write-attribute(name=elytron-domain,value=ApplicationDomain)
