<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly</groupId>
        <artifactId>ejb-client-testsuite-parent</artifactId>
        <version>1.0.0.Final-SNAPSHOT</version>
    </parent>

    <groupId>ejb-timers-ts</groupId>
    <artifactId>ejb-timers-ts</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <server.zip>${project.basedir}/../snapshots/target/wildfly/build/target/wildfly-EJB-CLIENT-TESTSUITE.zip</server.zip>

        <version.eap.bom>7.1.0.GA-redhat-8</version.eap.bom>
        <version.creaper>1.6.1</version.creaper>
        
        <!--Node settings-->
        <node1.contextPath>http://127.0.0.1:8080</node1.contextPath>
        <node2.contextPath>http://127.0.0.1:8180</node2.contextPath>
        <node1.jbossHome>${project.basedir}/target/node1</node1.jbossHome>
        <node2.jbossHome>${project.basedir}/target/node2</node2.jbossHome>
        <node1.managementAddress>127.0.0.1</node1.managementAddress>
        <node1.managementPort>9990</node1.managementPort>
        <node2.managementAddress>127.0.0.1</node2.managementAddress>
        <node2.managementPort>10090</node2.managementPort>
        <node1.portOffset>0</node1.portOffset>
        <node2.portOffset>100</node2.portOffset>
        <node1.multicastAddress>230.0.0.4</node1.multicastAddress>
        <node2.multicastAddress>230.0.0.4</node2.multicastAddress>

        <!-- default test parameters -->
        <stepSize>50</stepSize>
        <timerSchedule>1000</timerSchedule>
        <testLength>30</testLength>
        <stepDelay>5</stepDelay>
        <maxExecutionDelay>500</maxExecutionDelay>
        
    </properties>

    <dependencies>
        <!-- EAP related -->

        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-ejb-client</artifactId>
            <version>EJB-CLIENT-TESTSUITE</version>
        </dependency>

        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-protocol</artifactId>
        </dependency>
        
        <!-- Arquillian -->
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-impl-base</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.core</groupId>
            <artifactId>arquillian-core-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-common</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Creaper -->
        <dependency>
            <groupId>org.wildfly.extras.creaper</groupId>
            <artifactId>creaper-core</artifactId>
            <version>${version.creaper}</version>
        </dependency>
        <dependency>
            <groupId>org.wildfly.extras.creaper</groupId>
            <artifactId>creaper-commands</artifactId>
            <version>${version.creaper}</version>
        </dependency>
        <dependency>
            <groupId>org.wildfly.core</groupId>
            <artifactId>wildfly-cli</artifactId>
        </dependency>

        <!-- Other -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/java</directory>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
        
        <plugins>
            <!-- prepare server distributions before running the test -->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unzip-server</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                if (!Boolean.getBoolean("skipUnzipServer")) {
                                    def ant = new AntBuilder()
                                    for(node in ["${node1.jbossHome}",
                                                 "${node2.jbossHome}",
                                    ]) {
                                        if(!new File("$node").exists()) {
                                            ant.unzip(src: "${server.zip}",
                                                    dest: "$node",
                                                    overwrite: "true"){ cutdirsmapper(dirs:"1") }
                                        } else {
                                            println "Not unzipping server zip into $node, because the directory already exists"
                                        }
                                    }
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <systemPropertyVariables>
                        <node1.contextPath>${node1.contextPath}</node1.contextPath>
                        <node1.managementAddress>${node1.managementAddress}
                        </node1.managementAddress>
                        <node1.managementPort>${node1.managementPort}</node1.managementPort>
                        <node1.jbossHome>${node1.jbossHome}</node1.jbossHome>
                        <node1.nodeName>${node1.nodeName}</node1.nodeName>
                        <node1.portOffset>${node1.portOffset}</node1.portOffset>

                        <node2.contextPath>${node2.contextPath}</node2.contextPath>
                        <node2.managementAddress>${node2.managementAddress}
                        </node2.managementAddress>
                        <node2.managementPort>${node2.managementPort}</node2.managementPort>
                        <node2.jbossHome>${node2.jbossHome}</node2.jbossHome>
                        <node2.nodeName>${node2.nodeName}</node2.nodeName>
                        <node2.portOffset>${node2.portOffset}</node2.portOffset>
                        <arquillian.launch>wildfly-cluster</arquillian.launch>
                    </systemPropertyVariables>
                    <skip>false</skip>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <trimStackTrace>false</trimStackTrace>
                    <printSummary>true</printSummary>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>